swagger: '2.0'
info:
  title: LiquidIoT device manager
  description: The liquidIoT device manager manages information about IoT devices and apps deployed to them.
                Devices can register to the manager and also update their information later such as what applications have .
                been deployed to them. The manager can give a list of all devices and applications deployed on them.
                User can also query devices and applications with different criterions.
                Device manager manages also app api classes which define using swagger which kind of api an application has.
                The device manager can produce a swagger api description for an app deployed on a device based on the classes the app has.
                
  version: "0.2"
host: 130.230.142.101:3001
paths:
  /apis:
    get:
      summary: List all classes.
      description: Lists all classes with their names and a short description.
      operationId: classList
      responses:
        '200':
          description: Array of class names and descriptions
          schema:
            type: array
            items:
              $ref: '#/definitions/class'
  /apis/{className}:
    get:
      summary: API description of the class
      description: A swagger fragment which defines what kind of operations an app implementing this class will offer.
      operationId: classGet
      parameters:
        - name: className
          description: Name of the class
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Swagger fragment
          schema:
            $ref: '#/definitions/swaggerFragment'
        '404':
            description: class not found
            schema:
                $ref: "#/definitions/error404"
        '500':
            description: "server error"
            schema:
                $ref: "#/definitions/error500"
    put:
      summary: Create or replace the API description
      description: A new classs will be created if there already is not a class with the given name otherwise the existing class will be updated with the information in the request.
      operationId: classModify
      parameters:
        - name: className
          description: Name of the class
          in: path
          required: true
          type: string
        - name: api
          description: A swagger fragment that defines the api offered by apps that implement this class.
          in: body
          required: true
          schema:
            $ref: '#/definitions/swaggerFragment'
      responses:
        '200':
          description: The class was created or updated successfully.
          schema:
            $ref: '#/definitions/swaggerFragment'
        '500':
            description: "server error"
            schema:
                $ref: "#/definitions/error500"
    delete:
      summary: Delete the API description
      operationId: classRemove
      parameters:
        - name: className
          description: Name of the class
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Class deleted successfully.
          schema:
            $ref: '#/definitions/swaggerFragment'
        '404':
            description: class not found
            schema:
                $ref: "#/definitions/error404"
        '500':
            description: "server error"
            schema:
                $ref: "#/definitions/error500"
  /devices/{deviceId}/apps/{appId}/api:
    get:
      summary: Swagger description of the application api
      description: The API description combines the Swagger fragments of all the classes of the application. It also contains the host and basePath of the application that depend on the device the app is running on.
      operationId: deviceSwaggerApi
      parameters:
        - name: deviceId
          description: Device ID
          in: path
          required: true
          type: string
        - name: appId
          description: Application ID
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Full Swagger description of the api.
          schema:
            $ref: '#/definitions/swaggerDescription'
        '404':
            description: device, app or classes the app refers to  not found
            schema:
                $ref: "#/definitions/error404"
        '500':
            description: "server error"
            schema:
                $ref: "#/definitions/error500"
  /devices:
    get:
      summary: List of devices.
      description: Information about each device such as hardware capabilities (classes) and apps deployed. This list can be filtered based on device information
                   or based on the apps running on the devices. The filter expressions are based on CSS selectors. You can for example filter based on device or app classes .canPlaySound 
                   or based on attributes [location=TE113]. You can also build more complecs expressions e.g. .canPlaySound[location=TE113].
      operationId: deviceList
      parameters:
        - name: device
          description: Filter based on device's information.
          in: query
          required: false
          type: string
        - name: app
          description: Filter based on applications
          in: query
          required: false
          type: string
      responses:
        '200':
          description: List of devices. If no filtering parameters all of them.
          schema:
            type: array
            items:
               $ref: '#/definitions/device'
        '400':
          description: Error in app or device filter expression or with database.
    post:
      summary: Add a new device.
      description: A device registers itself to the device manager by adding its information.
      operationId: deviceAdd
      parameters:
        - name: device
          description: The device's information.
          required: true
          in: body
          schema:
            $ref: '#/definitions/device'
      responses:
        '200':
          description: Device added successfully. Returns the id of the newly added device.
          schema:
            type: string
            description: the id of the added device
        '400':
          description: error in adding the device.
  /devices/id/{id}:
    get:
      summary: Get device by id.
      description: Get the information of a specific device.
      operationId: deviceGet
      parameters:
        - name: id
          description: the device id
          type: string
          required: true
          in: path
      responses:
        '200':
          description: The device information.
          schema:
            $ref: '#/definitions/device'
        '404':
          description: No device with given id.
        '400':
          description: Data base error.
  /devices/{id}/apps:
    post:
      summary: Add application.
      description: When a application is deployed to a device the device  sends the app's information to the device manager.
      operationId: deviceSaveApp
      parameters:
        - name: id
          description: the device id
          required: true
          type: string
          in: path
        - name: app
          description: Information about the new app.
          in: body
          required: true
          schema:
            $ref: '#/definitions/app'
      responses:
        '200':
          description: The app was added successfully.
          schema:
            $ref: '#/definitions/device'
        '404':
          description: No device with given id.
        '500':
          description: Data base error or something else.
  /devices/{devid}/apps/{appid}:
    put:
      summary: "Update application's information."
      description: "When deployed application's information such as its status changes the device updates the information to device manager."
      operationId: deviceUpdateApp
      parameters:
        - name: devid
          description: the device id
          required: true
          type: string
          in: path
        - name: appid
          description: The id of the app to be updated.
          in: path
          required: true
          type: string
        - name: app
          description: The app information (not just the updated part)
          required: true
          in: body
          schema:
            $ref: '#/definitions/app'
      responses:
        '200':
          description: The app information  was updated successfully.
          schema:
            $ref: '#/definitions/device'
        '404':
          description: No device with given id or no app with given id on a device.
        '500':
          description: Data base error or something else.
    delete:
      summary: Remove application.
      description: When an application is removed from a device. The device removes it from the device manager.
      operationId: deviceRemoveApp
      parameters:
        - name: devid
          description: the device id
          required: true
          type: string
          in: path
        - name: appid
          description: The id of the app to be removed.
          in: path
          required: true
          type: string
      responses:
        '200':
          description: The app was removed successfully.
          schema:
            $ref: '#/definitions/device'
        '404':
          description: No device with given id or no app with given id on a device.
        '500':
          description: Data base error or something else.
  /mashups:
    post:
      summary: execute mashup 
      description: Executes the given mashup and reports the execution results.
      operationId: mashupExecute
      parameters:
        - name: mashup
          description: The mashup to be executed.
          required: true
          in: body
          schema:
            type: object
      responses:
        '200':
          description: Mashup executed successfully
        '400':
          description: Invalid mashup.
  /devicecapabilities:
    get:
      summary: List device capabilities.
      description: Lists all available device capabilities that are used to defnine which kind of hardware features a device has.
      operationId: deviceCapabilityGet
      responses:
        '200':
          description: List of device capability names and descriptions.
          schema:
            type: array
            items:
              $ref: '#/definitions/deviceCapability'
definitions:
  swaggerFragment:
    type: object
    description: Swagger API description excluding host, basePath, and schemes
  swaggerDescription:
    type: object
    description: Swagger API description
  error404:
      description: error message
      type: object
      properties:
          message:
              type: string
  error500:
      description: error message
      type: object
  device:
    description: Information about a device in the manager.
    type: object
    properties:
      '_id':
        type: string
        description: Unique id used to identify devices in the system.
      name:
        type: string
        description: A human readable name for the device
      manufacturer:
        type: string
      libraries:
        type: object
        description: Software libraries installed where key is the library name and value its version.
      location:
        type: string
        description: Where the device is located.
      url:
        type: string
        description: URL for the devices management api.
      connected-devices:
        type: object
        description: information about connected devices such as sensors. attribute name is a device type and value has information about device like model
      classes:
        type: array
        description: hardware capabilities offered by the device
        items:
          type: string
      apps:
        type: array
        description: applications deployed on the device
        items:
          $ref: '#/definitions/app'
      matchedApps:
        type: array
        description: This field is present only when querying devices with an app filter. In which case this lists apps matched by the filter.
        items:
          $ref: '#/definitions/app'
  app:
    type: object
    properties:
      name:
        type: string
        description: application name
      version:
        type: string
        description: the application version
      description:
        type: string
        description: application description
      author:
        type: string
      license:
        type: string
      classes:
        type: array
        description: Application classes that this app implements. Defines which kind of api the app offers.
        items:
          type: string
      id:
        type: string
        description: Unique identifier for the deployment inside the device. Used to identify app in api.
      status:
        type: string
        description: deployment status running, stopped, error.
  class:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
  deviceCapability:
      type: object
      properties:
        name:
          type: string
        description:
          type: string